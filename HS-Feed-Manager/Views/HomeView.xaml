<UserControl
    x:Class="HS_Feed_Manager.Views.HomeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:HS_Feed_Manager.DataModels"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="600"
    d:DesignWidth="1000"
    mc:Ignorable="d">

    <UserControl.Resources>
        <sys:Double x:Key="IconSize">25</sys:Double>
        <GridLength x:Key="IconBarSize">25</GridLength>
        <Style
            x:Key="IconStyle"
            BasedOn="{StaticResource AccentedSquareButtonStyle}"
            TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Margin" Value="0,0,20,0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush8}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="DownloadFeedIcon"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:FontAwesome Kind=CloudDownloadAltSolid, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:FontAwesome Kind=CloudDownloadAltSolid, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:FontAwesome Kind=CloudDownloadAltSolid, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="SearchFolder"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:Material Kind=FolderSearch, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=FolderSearch, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=FolderSearch, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="ListPlus"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:Material Kind=PlaylistPlus, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=PlaylistPlus, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=PlaylistPlus, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="ListMinus"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:Material Kind=PlaylistMinus, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=PlaylistMinus, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=PlaylistMinus, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="StartDownload"
            BasedOn="{StaticResource IconStyle}"
            TargetType="Button">
            <Setter Property="Content" Value="{iconPacks:Material Kind=FileDownload, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=FileDownload, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Content" Value="{iconPacks:Material Kind=FileDownload, Width={StaticResource IconSize}, Height={StaticResource IconSize}}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <ObjectDataProvider
            x:Key="UnderlinedEnumValues"
            MethodName="GetValues"
            ObjectType="{x:Type mah:UnderlinedType}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="mah:UnderlinedType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Grid x:Name="TheContentGrid" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource IconBarSize}" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Margin="8,0,0,0"
            Orientation="Horizontal">
            <Button Style="{DynamicResource DownloadFeedIcon}" ToolTip="Download Feed" />
            <Button Style="{DynamicResource SearchFolder}" ToolTip="Search Local Folders" />
            <Button Style="{DynamicResource ListPlus}" ToolTip="Add Feed to Download" />
            <Button Style="{DynamicResource ListMinus}" ToolTip="Remove Feed from Download" />
            <Button Style="{DynamicResource StartDownload}" ToolTip="Start Episode Download" />
        </StackPanel>
        <Rectangle
            Grid.Row="1"
            Height="1"
            Margin="8,0,8,0"
            Fill="White" />
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <GroupBox
                Grid.Column="0"
                Margin="0,5,0,0"
                mah:ControlsHelper.HeaderFontSize="30"
                BorderBrush="Transparent"
                Header="Current Downloads">
                <ListBox
                    x:Name="artist"
                    Margin="0,5,0,0"
                    BorderBrush="Transparent"
                    ItemsSource="{x:Static models:SampleData.Artists}"
                    Style="{DynamicResource VirtualisedMetroListBox}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Artist}">
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                                        <Binding Mode="OneWay" Path="ArtistId" />
                                        <Binding Mode="OneWay" Path="Name" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
            <Rectangle
                Grid.Column="1"
                Width="1"
                Margin="0,50,0,0"
                Fill="White" />
            <StackPanel
                Grid.Column="2"
                Height="37"
                Margin="0,8,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <ComboBox
                    x:Name="UnderlinedComboBox"
                    Width="100"
                    Height="20"
                    Margin="5,5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ItemsSource="{Binding Source={StaticResource UnderlinedEnumValues}}"
                    SelectedIndex="0" />
                <TextBox
                    Height="20"
                    MinWidth="150"
                    MaxWidth="250"
                    mah:TextBoxHelper.ButtonCommand="{Binding TextBoxButtonCmd, Mode=OneWay}"
                    mah:TextBoxHelper.ClearTextButton="True"
                    mah:TextBoxHelper.UseFloatingWatermark="False"
                    mah:TextBoxHelper.Watermark="Search...">
                    <TextBox.InputBindings>
                        <KeyBinding
                            Key="Return"
                            Command="{Binding TextBoxButtonCmd, Mode=OneWay}"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Text, Mode=OneWay}" />
                    </TextBox.InputBindings>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource SearchMetroTextBox}" TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                    <Setter Property="mah:TextBoxHelper.ButtonContent" Value="r" />
                                    <Setter Property="mah:TextBoxHelper.ButtonContentTemplate" Value="{x:Null}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

            </StackPanel>
            <mah:MetroTabControl
                x:Name="TC"
                Grid.Column="2"
                Margin="0,5,0,0">
                <mah:MetroTabItem Header="Feed List">
                    <ListBox
                        Margin="0,5,0,0"
                        BorderBrush="Transparent"
                        ItemsSource="{x:Static models:SampleData.Artists}"
                        Style="{DynamicResource VirtualisedMetroListBox}">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:Artist}">
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Mode="OneWay" Path="ArtistId" />
                                            <Binding Mode="OneWay" Path="Name" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </mah:MetroTabItem>
                <mah:MetroTabItem Header="Local List">
                    <ListBox
                        x:Name="albums"
                        Margin="0,5,0,0"
                        ItemsSource="{Binding ElementName=artist, Path=SelectedItem.Albums}"
                        Style="{DynamicResource VirtualisedMetroListBox}">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:Album}">
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Mode="OneWay" Path="Title" />
                                            <Binding Mode="OneWay" Path="Price" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </mah:MetroTabItem>
            </mah:MetroTabControl>
            <Rectangle
                Grid.Column="3"
                Width="1"
                Margin="0,50,0,0"
                Fill="White" />
            <GroupBox
                Grid.Column="4"
                Margin="0,5,0,0"
                mah:ControlsHelper.HeaderFontSize="30"
                BorderBrush="Transparent"
                Header="Feed Information">
                <StackPanel Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Margin" Value="0,10,0,0" />
                        </Style>
                    </StackPanel.Resources>
                    <Grid>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            FontWeight="UltraLight"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="Name:" />
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontSize="15"
                            FontWeight="Normal"
                            Text="Series Season Name 2" />
                    </Grid>
                    <Grid>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            FontWeight="UltraLight"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="Status:" />
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontSize="15"
                            FontWeight="Normal"
                            Text="On Air" />
                    </Grid>
                    <Grid>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            FontWeight="UltraLight"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="Episodes:" />
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontSize="15"
                            FontWeight="Normal"
                            Text="20" />
                    </Grid>
                    <Grid>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            FontWeight="UltraLight"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="Auto Download:" />
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontSize="15"
                            FontWeight="Normal"
                            Text="True" />
                    </Grid>
                    <Grid>
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            FontWeight="UltraLight"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="Local Ep. Count:" />
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            FontSize="15"
                            FontWeight="Normal"
                            Text="20" />
                    </Grid>
                    <Grid VerticalAlignment="Center">
                        <TextBlock
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            FontSize="20"
                            FontWeight="UltraLight"
                            Foreground="{DynamicResource AccentColorBrush}"
                            Text="Rating:" />
                        <StackPanel
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type iconPacks:PackIconMaterialDesign}">
                                    <Setter Property="Margin" Value="6,0,0,0" />
                                </Style>
                            </StackPanel.Resources>
                            <iconPacks:PackIconMaterialDesign
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                Kind="{Binding Path=Icons[4]}" />
                            <iconPacks:PackIconMaterialDesign
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                Kind="{Binding Path=Icons[3]}" />
                            <iconPacks:PackIconMaterialDesign
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                Kind="{Binding Path=Icons[2]}" />
                            <iconPacks:PackIconMaterialDesign
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                Kind="{Binding Path=Icons[1]}" />
                            <iconPacks:PackIconMaterialDesign
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center"
                                Kind="{Binding Path=Icons[0]}" />
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>
